name: 'openpilot env setup (native no-docker)'

inputs:
  is_retried:
    description: 'Mock param to maintain compatibility'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Show runner info
      shell: bash
      run: |
        echo "Runner OS: $RUNNER_OS"
        echo "Arch: $(uname -m)"

    - name: Restore apt cache
      uses: actions/cache@v3
      with:
        path: /var/cache/apt/archives
        key: apt-cache-${{ runner.os }}
        restore-keys: |
          apt-cache-${{ runner.os }}

    - name: Restore pip cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: pip-cache-${{ runner.os }}
        restore-keys: |
          pip-cache-${{ runner.os }}

    - name: Install system dependencies
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y \
          git \
          python3-pip \
          python3-dev \
          python3-venv \
          build-essential \
          libcap-dev \
          libusb-1.0-0-dev \
          libavcodec-dev \
          libavformat-dev \
          libswscale-dev \
          libopencv-dev \
          libeigen3-dev \
          libprotobuf-dev \
          protobuf-compiler \
          libturbojpeg0-dev \
          libcurl4-openssl-dev

    - name: Set up Python environment
      shell: bash
      run: |
        python3 -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip

    - name: Install Python dependencies
      shell: bash
      run: |
        source venv/bin/activate
        pip install -r requirements.txt